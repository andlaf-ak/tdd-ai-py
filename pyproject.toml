[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[tool.black]
line-length = 80
target-version = ['py313']
include = '\.pyi?$'

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.flake8]
max-line-length = 80
ignore = ["E203", "W503", "E501", "D"]
select = ["E", "W", "F", "N"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 80

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.poetry]
name = "tdd-ai-py"
version = "0.1.0"
description = ""
authors = ["Andrea Laforgia <andrea.laforgia@armakuni.com>"]
readme = "README.md"
packages = [{include = "tdd_ai_py", from = "src"}]

[tool.poetry.dependencies]
python = "^3.13"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
flake8-import-order = "^0.18.2"
pep8-naming = "^0.13.3"
pylint = "^3.0.0"
mypy = "^1.5.0"
bandit = "^1.7.5"
safety = "^2.3.0"
pre-commit = "^3.0.0"

[tool.pylint.messages_control]
disable = [
    "too-few-public-methods",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
]

[tool.pylint.format]
max-line-length = "80"
